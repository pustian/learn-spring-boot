server:
    port: 8088
spring:
    kafka:
        # 指定kafka server的地址，集群配多个，中间，逗号隔开
        bootstrap-servers:
            - 192.168.122.30:9092
            - 192.168.122.31:9092
            - 192.168.122.32:9092
            - 192.168.122.33:9092
            - 192.168.122.34:9092
        #=============== consumer  =======================
        consumer:
            # 指定默认消费者group id --> 由于在kafka中，同一组中的consumer不会读取到同一个消息，
            # 依靠groud.id设置组名
            group-id: hello-message
            # 没有初始化的offset时，可以设置以下三种情况：（默认：latest）
            # earliest
            # 当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
            # latest
            # 当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
            # none
            # topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
            auto-offset-reset: latest
            # 设置自动提交offset
            enable-auto-commit: true
            # 则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
#            auto-commit-interval: 100
            # 指定消息key和消息体的编解码方式
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
#            value-serializer: tian.pusen.util.UserDeserializer

##
#logging:
#    level:
#        root: debug
